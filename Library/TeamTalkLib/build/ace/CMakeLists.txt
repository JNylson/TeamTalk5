cmake_minimum_required(VERSION 3.1)

project(ACE)

include(ExternalProject)

##################################################
# ACE
##################################################
if (${CMAKE_SIZEOF_VOID_P} EQUAL 8)
  ExternalProject_Add(ACE-win64
    GIT_REPOSITORY    https://github.com/bear101/ACE
    GIT_TAG           4933f7d4b92
    GIT_SUBMODULES_RECURSE TRUE
    GIT_SHALLOW       TRUE
    UPDATE_COMMAND    ""
    CONFIGURE_COMMAND ""
    BUILD_IN_SOURCE   TRUE
    BUILD_COMMAND     cd ACE
    COMMAND           set SSL_ROOT=${OPENSSL_DIR}
    COMMAND           build.bat
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 ace\\ace.sln -target:ACE /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 ace\\ace.sln -target:ACE /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 ace\\ace.sln -target:SSL /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 ace\\ace.sln -target:SSL /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 protocols\\protocols.sln -target:INet /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 protocols\\protocols.sln -target:INet /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 protocols\\protocols.sln -target:INet_SSL /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=x64 protocols\\protocols.sln -target:INet_SSL /property:Configuration=Release
    INSTALL_COMMAND   ""
    DEPENDS           openssl-win64
    )
  ExternalProject_Get_Property(ACE-win64 SOURCE_DIR)
  set (ACE_DIR ${SOURCE_DIR}/ACE)
  set (ACE_DEPEND ACE-win64)
else()
  ExternalProject_Add(ACE-win32
    GIT_REPOSITORY    https://github.com/bear101/ACE
    GIT_TAG           4933f7d4b92
    GIT_SUBMODULES_RECURSE TRUE
    GIT_SHALLOW       TRUE
    UPDATE_COMMAND    ""
    CONFIGURE_COMMAND ""
    BUILD_IN_SOURCE   TRUE
    BUILD_COMMAND     cd ACE
    COMMAND           set SSL_ROOT=${OPENSSL_DIR}
    COMMAND           build.bat
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 ace\\ace.sln -target:ACE /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 ace\\ace.sln -target:ACE /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 ace\\ace.sln -target:SSL /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 ace\\ace.sln -target:SSL /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 protocols\\protocols.sln -target:INet /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 protocols\\protocols.sln -target:INet /property:Configuration=Release
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 protocols\\protocols.sln -target:INet_SSL /property:Configuration=Debug
    COMMAND           msbuild -maxCpuCount ${PLATFORMTOOLSET} /p:Platform=win32 protocols\\protocols.sln -target:INet_SSL /property:Configuration=Release
    INSTALL_COMMAND   ""
    DEPENDS           openssl-win32
    )
  ExternalProject_Get_Property(ACE-win32 SOURCE_DIR)
  set (ACE_DIR ${SOURCE_DIR}/ACE)
  set (ACE_DEPEND ACE-win32)
endif()

# Autogenerated paths must be created prior for
# INTERFACE_INCLUDE_DIRECTORIES to work (target_include_directories ... INTERFACE ...)
file(MAKE_DIRECTORY ${ACE_DIR})
file(MAKE_DIRECTORY ${ACE_DIR}/protocols)

add_library(ace STATIC IMPORTED GLOBAL)
add_dependencies(ace ${ACE_DEPEND})
target_include_directories (ace INTERFACE ${ACE_DIR})
set_target_properties(ace PROPERTIES
                      IMPORTED_LOCATION_DEBUG ${ACE_DIR}/lib/$(PlatformName)/ACEsd.lib
                      IMPORTED_LOCATION ${ACE_DIR}/lib/$(PlatformName)/ACEs.lib)

add_library(ace_ssl STATIC IMPORTED GLOBAL)
target_include_directories (ace_ssl INTERFACE ${ACE_DIR})
set_target_properties(ace_ssl PROPERTIES
                      IMPORTED_LOCATION_DEBUG ${ACE_DIR}/lib/$(PlatformName)/ACE_SSLsd.lib
                      IMPORTED_LOCATION ${ACE_DIR}/lib/$(PlatformName)/ACE_SSLs.lib)
add_dependencies(ace_ssl ace openssl-crypto openssl-ssl)

add_library(ace_inet STATIC IMPORTED GLOBAL)
add_dependencies(ace_inet ace)
target_include_directories (ace_inet INTERFACE ${ACE_DIR}/protocols)
set_target_properties(ace_inet PROPERTIES
                      IMPORTED_LOCATION_DEBUG ${ACE_DIR}/lib/$(PlatformName)/ACE_INetsd.lib
                      IMPORTED_LOCATION ${ACE_DIR}/lib/$(PlatformName)/ACE_INets.lib)

add_library(ace_inet_ssl STATIC IMPORTED GLOBAL)
add_dependencies(ace_inet_ssl ace_inet ace_ssl)
target_include_directories (ace_inet_ssl INTERFACE ${ACE_DIR}/protocols)
set_target_properties(ace_inet_ssl PROPERTIES
                      IMPORTED_LOCATION_DEBUG ${ACE_DIR}/lib/$(PlatformName)/ACE_INet_SSLsd.lib
                      IMPORTED_LOCATION ${ACE_DIR}/lib/$(PlatformName)/ACE_INet_SSLs.lib)
